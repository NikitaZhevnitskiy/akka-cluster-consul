akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }

    extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

    remote {
      log-remote-lifecycle-events = off
      log-sent-messages = off
      log-received-messages = off

      netty.tcp {
        # in production should be replaced with PUBLIC ip/hostname
        hostname = ${HOST_INTERNAL_IP}
        port = 2551
        # Temporary, only for running real cluster locally with Docker
        port = ${?SERVICE_AKKA_PORT}

        bind-hostname = ${HOST_INTERNAL_IP}
        bind-port = 2551
        # Temporary, only for running real cluster locally with Docker
        bind-port = ${?SERVICE_AKKA_PORT}
      }
    }

    cluster {
      #Minimum number of nodes to start broadcasting Up message, should be 3 minimum unless it's local
      min-nr-of-members = 3
      use-dispatcher = cluster-dispatcher
      metrics {
        # Disable legacy metrics in akka-cluster.
        enabled = off
        # Sigar native library extract location during tests.
        # Note: use per-jvm-instance folder when running multiple jvm on one host.
        native-library-extract-folder = ${user.dir}/target/native
      }
    }
}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
}

service.name = "akka-cluster-demo"

hostname = "0.0.0.0"
port = "80"

origin.domain = "http://localhost"

consul {
  enabled = true
  host = 127.0.0.1
  host = ${?CONSUL_HOST}
}
